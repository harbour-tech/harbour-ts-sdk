syntax = "proto3";

import "google/protobuf/timestamp.proto";

package openbanking.v1;

service PingService {
  rpc Ping (PingRequest) returns (PingResponse) {}
}

message PingRequest {
}

message PingResponse {
  string message = 10;
}

service OpenbankingService {
  rpc ConfirmAuth (ConfirmAuthRequest) returns (ConfirmAuthResponse) {}
  rpc RejectAuth (RejectAuthRequest) returns (RejectAuthResponse) {}
  rpc GetConsents(GetConsentsRequest) returns (GetConsentsResponse) {}
  rpc RevokeConsent(RevokeConsentRequest) returns (RevokeConsentResponse) {}
}

message GetConsentsRequest {
  string user_id = 10;
}

message GetConsentsResponse{
  repeated Consent consents = 10;

  message Consent {
    string id = 10;
    string user_id = 20;
    string status = 30; // note: this field is probably unnecessary to the client, as it's always authorised
    string name = 40; // name of the TTP
    google.protobuf.Timestamp created_at = 50;
    optional google.protobuf.Timestamp expires_at = 60; // always null for UK Open Banking, there's no expiry
    repeated string permissions = 70; //eg: ["ReadAccountsBasic", "ReadAccountsDetail", ...]
    repeated Account accounts = 80;
  }
  message Account {
    string account_id = 10; // the client can use this to match local storage and show account coordinates
    string account_name = 20; // eg: GBP account
  }
}

message RevokeConsentRequest {
  string user_id = 10;
  string consent_id = 20;
}

message RevokeConsentResponse {
}

message ConfirmAuthRequest {
  string user_id = 10;

  // Secret id from the push notification you received at the start of the auth flow
  string secret_id = 20;

  // Secret value from the push notification you received at the start of the auth flow
  string secret = 30;

  // standard jwt with vendor_device_id claim and strict expiry, same as when authenticating
  // note: if this is built incorrectly you'll get a grpc code invalid argument
  string signature = 40;
}

message ConfirmAuthResponse {
  oneof result {
    Error error = 10;
  }

  enum Error {
    ERROR_UNSPECIFIED = 0;
    // secret is expired
    ERROR_EXPIRED = 1;
  }
}

message RejectAuthRequest {
  string user_id = 10;

  // Secret id from the push notification you received at the start of the auth flow
  string secret_id = 20;

  // Secret value from the push notification you received at the start of the auth flow
  string secret = 30;
}

message RejectAuthResponse {

}
