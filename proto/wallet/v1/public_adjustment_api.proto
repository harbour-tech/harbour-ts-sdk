syntax = "proto3";

package wallet.v1;

import "google/protobuf/empty.proto";

service AdjustmentService {
  rpc AdjustBalance(AdjustBalanceRequest) returns (AdjustBalanceResponse) {}
}

message AdjustBalanceRequest {
  // the password is required to prevent accidental calls to this API
  string password = 10;
  // this key is also used as transaction_id in the ledger API
  string idempotency_key = 20;
  string reason = 30;
  string description = 40;

  // List of entries part of this transaction, the sum of which needs to be zero.
  repeated EntryInput entries = 50;
}

message EntryInput {
  // The account on which this entry is debited/credited
  AccountID account_id = 10;
  // Amount debited/credited to the account, represented as a floating-point string (eg: -12.3)
  string amount = 20;
  // If any of these is present and violated, the entry will be rejected
  BalanceConstraints balance_constraints = 30;

  // whether to add this entry to the user's timeline or not
  bool add_to_timeline = 40;

  // Set this to true to only append the transaction to the ledger if the account exists.
  // This is a great protection against typo's in the account name.
  bool must_exist = 60;
}

message BalanceConstraints {
  optional string min_bal = 10;
  optional string max_bal = 20;
}


// Uniquely identifies an account.
// Eg: user/
message AccountID {
  // Account owner is either user (identified by their ID) or system.
  oneof owner {
    string user_id = 10;
    google.protobuf.Empty system = 20;
  }
  // A string representation of the account_type enum from the ledger API.
  string account_type = 30;
  // The account name is just a way of differentiating multiple accounts of the same asset, for the same owner.
  // This might be true for users, who might potentially have multiple GBP accounts, but also for system accounts,
  // as we might need multiple crypto withdrawals wallets.
  // An empty name is allowed in absence of a use case for multiple accounts, and they can always be added later by
  // introducing sequential numbers or UUIDs or anything else, to distinguish them.
  string account_name = 40;

  string asset_id = 50;
}

message AdjustBalanceResponse {

}