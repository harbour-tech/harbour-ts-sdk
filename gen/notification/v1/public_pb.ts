// @generated by protoc-gen-es v1.4.2 with parameter "target=ts"
// @generated from file notification/v1/public.proto (package notification.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message notification.v1.PingRequest
 */
export class PingRequest extends Message<PingRequest> {
  constructor(data?: PartialMessage<PingRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "notification.v1.PingRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => []);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): PingRequest {
    return new PingRequest().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): PingRequest {
    return new PingRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): PingRequest {
    return new PingRequest().fromJsonString(jsonString, options);
  }

  static equals(
    a: PingRequest | PlainMessage<PingRequest> | undefined,
    b: PingRequest | PlainMessage<PingRequest> | undefined
  ): boolean {
    return proto3.util.equals(PingRequest, a, b);
  }
}

/**
 * @generated from message notification.v1.PingResponse
 */
export class PingResponse extends Message<PingResponse> {
  /**
   * @generated from field: string message = 10;
   */
  message = "";

  constructor(data?: PartialMessage<PingResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "notification.v1.PingResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): PingResponse {
    return new PingResponse().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): PingResponse {
    return new PingResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): PingResponse {
    return new PingResponse().fromJsonString(jsonString, options);
  }

  static equals(
    a: PingResponse | PlainMessage<PingResponse> | undefined,
    b: PingResponse | PlainMessage<PingResponse> | undefined
  ): boolean {
    return proto3.util.equals(PingResponse, a, b);
  }
}

/**
 * @generated from message notification.v1.SubmitPushTokenRequest
 */
export class SubmitPushTokenRequest extends Message<SubmitPushTokenRequest> {
  /**
   * @generated from field: string user_id = 10;
   */
  userId = "";

  /**
   * @generated from field: string device_id = 20;
   */
  deviceId = "";

  /**
   * @generated from field: string push_token = 30;
   */
  pushToken = "";

  constructor(data?: PartialMessage<SubmitPushTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "notification.v1.SubmitPushTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "device_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    {
      no: 30,
      name: "push_token",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): SubmitPushTokenRequest {
    return new SubmitPushTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): SubmitPushTokenRequest {
    return new SubmitPushTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): SubmitPushTokenRequest {
    return new SubmitPushTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(
    a:
      | SubmitPushTokenRequest
      | PlainMessage<SubmitPushTokenRequest>
      | undefined,
    b: SubmitPushTokenRequest | PlainMessage<SubmitPushTokenRequest> | undefined
  ): boolean {
    return proto3.util.equals(SubmitPushTokenRequest, a, b);
  }
}

/**
 * @generated from message notification.v1.SubmitPushTokenResponse
 */
export class SubmitPushTokenResponse extends Message<SubmitPushTokenResponse> {
  constructor(data?: PartialMessage<SubmitPushTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "notification.v1.SubmitPushTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => []);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): SubmitPushTokenResponse {
    return new SubmitPushTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): SubmitPushTokenResponse {
    return new SubmitPushTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): SubmitPushTokenResponse {
    return new SubmitPushTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(
    a:
      | SubmitPushTokenResponse
      | PlainMessage<SubmitPushTokenResponse>
      | undefined,
    b:
      | SubmitPushTokenResponse
      | PlainMessage<SubmitPushTokenResponse>
      | undefined
  ): boolean {
    return proto3.util.equals(SubmitPushTokenResponse, a, b);
  }
}

/**
 * @generated from message notification.v1.RemovePushTokenRequest
 */
export class RemovePushTokenRequest extends Message<RemovePushTokenRequest> {
  /**
   * @generated from field: string user_id = 10;
   */
  userId = "";

  /**
   * @generated from field: string device_id = 20;
   */
  deviceId = "";

  constructor(data?: PartialMessage<RemovePushTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "notification.v1.RemovePushTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "device_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): RemovePushTokenRequest {
    return new RemovePushTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): RemovePushTokenRequest {
    return new RemovePushTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): RemovePushTokenRequest {
    return new RemovePushTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(
    a:
      | RemovePushTokenRequest
      | PlainMessage<RemovePushTokenRequest>
      | undefined,
    b: RemovePushTokenRequest | PlainMessage<RemovePushTokenRequest> | undefined
  ): boolean {
    return proto3.util.equals(RemovePushTokenRequest, a, b);
  }
}

/**
 * @generated from message notification.v1.RemovePushTokenResponse
 */
export class RemovePushTokenResponse extends Message<RemovePushTokenResponse> {
  constructor(data?: PartialMessage<RemovePushTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "notification.v1.RemovePushTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => []);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): RemovePushTokenResponse {
    return new RemovePushTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): RemovePushTokenResponse {
    return new RemovePushTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): RemovePushTokenResponse {
    return new RemovePushTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(
    a:
      | RemovePushTokenResponse
      | PlainMessage<RemovePushTokenResponse>
      | undefined,
    b:
      | RemovePushTokenResponse
      | PlainMessage<RemovePushTokenResponse>
      | undefined
  ): boolean {
    return proto3.util.equals(RemovePushTokenResponse, a, b);
  }
}
