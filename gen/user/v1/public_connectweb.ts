// @generated by protoc-gen-connect-web v0.9.1 with parameter "target=ts"
// @generated from file user/v1/public.proto (package user.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import {
  GetUserDetailsRequest,
  GetUserDetailsResponse,
  PingRequest,
  PingResponse,
  SetExchangeReadinessRequest,
  SetExchangeReadinessResponse,
  UserReadinessRequest,
  UserReadinessResponse,
} from "./public_pb";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service user.v1.PingService
 */
export const PingService = {
  typeName: "user.v1.PingService",
  methods: {
    /**
     * @generated from rpc user.v1.PingService.Ping
     */
    ping: {
      name: "Ping",
      I: PingRequest,
      O: PingResponse,
      kind: MethodKind.Unary,
    },
  },
} as const;

/**
 * all endpoints require an authenticated user
 *
 * @generated from service user.v1.UserService
 */
export const UserService = {
  typeName: "user.v1.UserService",
  methods: {
    /**
     * @generated from rpc user.v1.UserService.GetReadiness
     */
    getReadiness: {
      name: "GetReadiness",
      I: UserReadinessRequest,
      O: UserReadinessResponse,
      kind: MethodKind.Unary,
    },
    /**
     * User have read and accepted the terms/risks of exchange trading.
     * Happens upon first exchange, and it is a one-time event.
     *
     * @generated from rpc user.v1.UserService.SetExchangeReadiness
     */
    setExchangeReadiness: {
      name: "SetExchangeReadiness",
      I: SetExchangeReadinessRequest,
      O: SetExchangeReadinessResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Fetch user details
     *
     * @generated from rpc user.v1.UserService.GetUserDetails
     */
    getUserDetails: {
      name: "GetUserDetails",
      I: GetUserDetailsRequest,
      O: GetUserDetailsResponse,
      kind: MethodKind.Unary,
    },
  },
} as const;
