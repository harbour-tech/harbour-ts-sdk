// @generated by protoc-gen-connect-es v1.3.0 with parameter "target=ts"
// @generated from file ramp/v1/public.proto (package ramp.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetAccountInfoRequest, GetAccountInfoResponse, PingRequest, PingResponse, RemoveAddressRequest, RemoveAddressResponse, SetBankAccountRequest, SetBankAccountResponse, WhitelistAddressRequest, WhitelistAddressResponse } from "./public_pb";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service ramp.v1.PingService
 */
export const PingService = {
  typeName: "ramp.v1.PingService",
  methods: {
    /**
     * @generated from rpc ramp.v1.PingService.Ping
     */
    ping: {
      name: "Ping",
      I: PingRequest,
      O: PingResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

/**
 * signature_type is supplied with every request in the header
 * public_key is supplied with every request in the header
 * timestamp is supplied with every request in the header and timestamp is validated as (+-1 minute from now) and used as a salt
 * signature is supplied with every request in the header as sing(request body + timestamp, private_key) and validated as verify(request body + timestamp, public_key)
 *
 * @generated from service ramp.v1.RampService
 */
export const RampService = {
  typeName: "ramp.v1.RampService",
  methods: {
    /**
     * @generated from rpc ramp.v1.RampService.GetAccountInfo
     */
    getAccountInfo: {
      name: "GetAccountInfo",
      I: GetAccountInfoRequest,
      O: GetAccountInfoResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc ramp.v1.RampService.WhitelistAddress
     */
    whitelistAddress: {
      name: "WhitelistAddress",
      I: WhitelistAddressRequest,
      O: WhitelistAddressResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc ramp.v1.RampService.RemoveAddress
     */
    removeAddress: {
      name: "RemoveAddress",
      I: RemoveAddressRequest,
      O: RemoveAddressResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Set a bank account for the off ramp
     *
     * @generated from rpc ramp.v1.RampService.SetBankAccount
     */
    setBankAccount: {
      name: "SetBankAccount",
      I: SetBankAccountRequest,
      O: SetBankAccountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

